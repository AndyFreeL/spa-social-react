{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","assets/images/katanaBottom.png","assets/images/decorLogo.png","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","className","s","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileInfo","profile","content","body","gAreaL","photo","src","photos","large","contacts","gAreaR","fullName","aboutMe","Preloader","Post","item","decor","decor_logo","decorLogo","alt","header","avatar","ava","text_zone","post_text","message","katana","like_zone","likesCount","maxLength10","maxLengthCreator","MyPosts","memo","postsElement","posts","map","p","id","MyPostReduxForm","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","placeholder","name","component","Textarea","validate","required","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","getProfile","getStatus","compose","withRouter"],"mappings":"gPAMIA,EAA6B,SAACC,GAAD,MAAY,CAC3CC,OAAOD,EAAME,KAAKD,SAGPE,EAAmB,SAACC,GAAe,IAEzCC,EAFwC,4JAG5C,WACE,OAAIC,KAAKC,MAAMN,OAER,cAACG,EAAD,eAAeE,KAAKC,QAFG,cAAC,IAAD,CAAUC,GAAG,eAJD,GAEdC,IAAML,WAUtC,OAFsCM,YAAQX,EAARW,CAAoCL,K,oBCnB3EM,EAAOC,QAAU,CAAC,QAAU,6BAA6B,KAAO,0BAA0B,OAAS,4BAA4B,OAAS,4BAA4B,MAAQ,2BAA2B,MAAQ,2BAA2B,OAAS,8B,oBCAnPD,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,OAAS,qBAAqB,OAAS,qBAAqB,UAAY,wBAAwB,UAAY,wBAAwB,UAAY,wBAAwB,OAAS,qBAAqB,MAAQ,oBAAoB,WAAa,2B,+JCsD5QC,EApDe,SAACN,GAE7B,MAA8BO,oBAAS,GAAvC,mBAAKC,EAAL,KAAeC,EAAf,KACA,EAA0BF,mBAASP,EAAMU,QAAzC,mBAAKA,EAAL,KAAaC,EAAb,KAEAC,qBAAU,WACRD,EAAUX,EAAMU,UACf,CAACV,EAAMU,SAgBV,OACE,8BACE,iCACIF,GACA,8BACE,sBAAMK,cAnBQ,WACtBJ,GAAY,IAkBmCK,UAAWC,IAAEL,OAApD,SAA8DV,EAAMU,QAAU,cAGjFF,GACC,8BACE,uBAAOQ,SAfG,SAACC,GACnBN,EAAUM,EAAEC,cAAcC,QAceC,OApBlB,WACvBX,GAAY,GACZT,EAAMqB,aAAaX,IAkBkDY,WAAW,EAAMH,MAAOT,YCJlFa,EA5BK,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,QAASH,EAA0B,EAA1BA,aAAcX,EAAY,EAAZA,OAE3C,OAAKc,EAIC,qBAAKV,UAAWC,IAAEU,QAAlB,SACE,sBAAKX,UAAWC,IAAEW,KAAlB,UACE,sBAAKZ,UAAWC,IAAEY,OAAlB,UACE,sBAAKb,UAAWC,IAAES,QAAlB,UACE,qBAAKV,UAAWC,IAAEa,MAAlB,SAAyB,qBAAKC,IAAKL,EAAQM,OAAOC,UAClD,+CAEF,qBAAKjB,UAAWC,IAAEiB,cAGpB,sBAAKlB,UAAWC,IAAEkB,OAAlB,UACE,8BAAMT,EAAQU,WACd,8BAAMV,EAAQW,UACd,cAAC,EAAD,CAAwBzB,OAAQA,EAAQW,aAAcA,YAhBzD,cAACe,EAAA,EAAD,K,0BCPI,MAA0B,yCCA1B,MAA0B,sC,QCoC1BC,EA/BF,SAACrC,GAEV,OACI,sBAAKc,UAAWC,IAAEuB,KAAlB,UACI,sBAAKxB,UAAWC,IAAEwB,MAAlB,UACI,8BAAK,qBAAKzB,UAAWC,IAAEyB,WAAYX,IAAKY,EAAWC,IAAI,OACvD,8BAAK,qBAAK5B,UAAWC,IAAEyB,WAAYX,IAAKY,EAAWC,IAAI,UAG3D,qBAAK5B,UAAWC,IAAE4B,OAAlB,SACI,qBAAK7B,UAAWC,IAAE6B,OAAQf,IAAKgB,IAAKH,IAAI,OAG5C,qBAAK5B,UAAWC,IAAE+B,UAAlB,SACI,qBAAKhC,UAAWC,IAAEgC,UAAlB,SAA8B/C,EAAMgD,YAExC,8BACI,qBAAKlC,UAAWC,IAAEkC,OAASpB,IAAKoB,EAAQP,IAAI,OAEhD,qBAAK5B,UAAWC,IAAEmC,UAAlB,SACI,8BAAK,yCAAYlD,EAAMmD,kBAE3B,sBAAKrC,UAAWC,IAAEwB,MAAlB,UACI,8BAAK,qBAAKzB,UAAWC,IAAEyB,WAAYX,IAAKY,EAAWC,IAAI,OACvD,8BAAK,qBAAK5B,UAAWC,IAAEyB,WAAYX,IAAKY,EAAWC,IAAI,c,iCCvBjEU,EAAYC,YAAiB,IAE7BC,EAAUpD,IAAMqD,MAAK,SAAAvD,GAEzB,IAAIwD,EAAexD,EAAMyD,MAAMC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAMX,QAASW,EAAEX,QAASG,WAAYQ,EAAER,YAAiBQ,EAAEC,OAMnG,OACE,gCACE,yCACA,cAACC,EAAD,CAAiBC,SAPL,SAACC,GACf/D,EAAMgE,QAAQD,EAAOE,gBAOlBT,QAeDK,EAAgBK,YAAU,CAACC,KAAK,UAAhBD,EATH,SAAClE,GAClB,OACE,uBAAM8D,SAAU9D,EAAMoE,aAAtB,UACE,cAACC,EAAA,EAAD,CAAOC,YAAa,kBAAmBC,KAAM,cAAeC,UAAWC,IAAUC,SAAU,CAACC,IAAUvB,KACtG,oDAOSE,I,QChBAsB,EAFUzE,aAdH,SAACV,GACrB,MAAO,CACLgE,MAAOhE,EAAMoF,YAAYpB,MACzBQ,YAAaxE,EAAMoF,YAAYZ,gBAGV,SAACa,GACxB,MAAO,CACLd,QAAS,SAACC,GACRa,EAASC,YAAqBd,QAKX9D,CAA6CmD,GCHvD0B,EAVC,SAAChF,GAEb,OACI,sBAAKc,UAAWC,IAAEU,QAAlB,UACI,cAAC,EAAD,CAAaD,QAASxB,EAAMwB,QAASd,OAAQV,EAAMU,OAAQW,aAAcrB,EAAMqB,eAC/E,cAAC,EAAD,Q,wBCFN4D,E,uKAEJ,WACE,IAAIC,EAASnF,KAAKC,MAAMmF,MAAMC,OAAOF,OAChCA,IACHA,EAASnF,KAAKC,MAAMqF,kBAGtBtF,KAAKC,MAAMsF,WAAWJ,GACtBnF,KAAKC,MAAMuF,UAAUL,K,oBAGvB,WAEE,OAAInF,KAAKC,MAAMN,OAGb,cAAC,EAAD,2BAAaK,KAAKC,OAAlB,IAAyBwB,QAASzB,KAAKC,MAAMwB,QAASd,OAAQX,KAAKC,MAAMU,OAAQW,aAActB,KAAKC,MAAMqB,gBAH9E,cAAC,IAAD,CAAUpB,GAAI,e,GAdjBC,IAAML,WA6BtB2F,sBACbrF,aARoB,SAACV,GAAD,MAAY,CAChC+B,QAAS/B,EAAMoF,YAAYrD,QAC3Bd,OAAQjB,EAAMoF,YAAYnE,OAC1B2E,iBAAiB5F,EAAME,KAAKuF,OAC5BxF,OAAOD,EAAME,KAAKD,UAIO,CAAC4F,eAAYC,cAAWlE,mBACjDoE,IACA7F,IAHa4F,CAIbP","file":"static/js/3.9ade6693.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth:state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n class RedirectComponent extends React.Component{\r\n   render() {\r\n     if(!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n     return <Component {...this.props} />\r\n   }\r\n }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n return ConnectedAuthRedirectComponent;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__4G1Zp\",\"body\":\"ProfileInfo_body__B9Pj6\",\"gAreaL\":\"ProfileInfo_gAreaL__2Gsic\",\"gAreaR\":\"ProfileInfo_gAreaR__1mn9q\",\"photo\":\"ProfileInfo_photo__M5UJR\",\"about\":\"ProfileInfo_about__1Ik8C\",\"status\":\"ProfileInfo_status__1bXnb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__1Kzvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__don9T\",\"avatar\":\"Post_avatar__3X2I6\",\"header\":\"Post_header__2MnSd\",\"text_zone\":\"Post_text_zone__2_595\",\"like_zone\":\"Post_like_zone__37LAY\",\"post_text\":\"Post_post_text__RRLtC\",\"katana\":\"Post_katana__1xy13\",\"decor\":\"Post_decor__3JI67\",\"decor_logo\":\"Post_decor_logo__1C67g\"};","import React, {useEffect, useState} from 'react';\r\nimport s from '../ProfileInfo/ProfileInfo.module.css'\r\n\r\nconst ProfileStatusWithHooks =(props)=> {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(()=>{\r\n    setStatus(props.status)\r\n  }, [props.status]);\r\n\r\n  const activateEditMode =()=>{\r\n    setEditMode(true);\r\n  }\r\n\r\n  const deactivateEditMode=()=>{\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  }\r\n\r\n const onStatusChange=(e)=>{\r\n    setStatus(e.currentTarget.value);\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {!editMode &&\r\n          <div>\r\n            <span onDoubleClick={activateEditMode} className={s.status} >{props.status || '-------'}</span>\r\n          </div>\r\n        }\r\n        {editMode &&\r\n          <div>\r\n            <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={status}/>\r\n          </div>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n    // return (\r\n    //   <div>\r\n    //     <div>\r\n    //       {this.state.editMode\r\n    //         ?  <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}/>\r\n    //         :  <span className={s.status} onDoubleClick={this.activateEditMode}>{this.props.status || '-------'}</span>\r\n    //       }\r\n    //     </div>\r\n    //   </div>\r\n    // );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import s from '../ProfileInfo/ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, updateStatus, status}) => {\r\n\r\n  if (!profile){\r\n    return <Preloader/>\r\n  }\r\n    return (\r\n        <div className={s.content}>\r\n          <div className={s.body}>\r\n            <div className={s.gAreaL}>\r\n              <div className={s.profile}>\r\n                <div className={s.photo}><img src={profile.photos.large}/></div>\r\n                <button>Follow</button>\r\n              </div>\r\n              <div className={s.contacts}>\r\n              </div>\r\n            </div>\r\n            <div className={s.gAreaR}>\r\n              <div>{profile.fullName}</div>\r\n              <div>{profile.aboutMe}</div>\r\n              <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n              {/*<ProfileStatus status={props.status} updateStatus={props.updateStatus}/>*/}\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default ProfileInfo;\r\n","export default __webpack_public_path__ + \"static/media/katanaBottom.f2cf9cca.png\";","export default __webpack_public_path__ + \"static/media/decorLogo.c3eda4a7.png\";","import s from '../Post/Post.module.css'\r\nimport katana from '../../../../assets/images/katanaBottom.png'\r\nimport decorLogo from '../../../../assets/images/decorLogo.png'\r\nimport ava from '../../../../assets/images/avatar.png'\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <div className={s.decor}>\r\n                <div><img className={s.decor_logo} src={decorLogo} alt=\"\"/></div>\r\n                <div><img className={s.decor_logo} src={decorLogo} alt=\"\"/></div>\r\n            </div>\r\n\r\n            <div className={s.header}>\r\n                <img className={s.avatar} src={ava} alt=\"\"/>\r\n            </div>\r\n\r\n            <div className={s.text_zone}>\r\n                <div className={s.post_text}>{props.message}</div>\r\n            </div>\r\n            <div>\r\n                <img className={s.katana}  src={katana} alt=\"\"/>\r\n            </div>\r\n            <div className={s.like_zone}>\r\n                <div><span>Like {props.likesCount}</span></div>\r\n            </div>\r\n            <div className={s.decor}>\r\n                <div><img className={s.decor_logo} src={decorLogo} alt=\"\"/></div>\r\n                <div><img className={s.decor_logo} src={decorLogo} alt=\"\"/></div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Post;","import Post from \"./Post/Post\";\r\nimport React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport { maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10=maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n  let postsElement = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount} key={p.id}/>)\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>My Post</h3>\r\n      <MyPostReduxForm onSubmit={onAddPost}/>\r\n      {postsElement}\r\n    </div>\r\n\r\n  )\r\n});\r\n\r\nconst MyPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field placeholder={'Enter your post'} name={'newPostText'} component={Textarea} validate={[required, maxLength10]}/>\r\n      <button>Add post</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst MyPostReduxForm=reduxForm({form:'myPost'})(MyPostForm);\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText))\r\n    },\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import s from '../Profile/Profile.module.css'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getStatus, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n    }\r\n    ;\r\n    this.props.getProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n\r\n    if(!this.props.isAuth) return <Redirect to={'/login'}/>;\r\n\r\n    return (\r\n      <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId:state.auth.userId,\r\n  isAuth:state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {getProfile, getStatus, updateStatus}),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n\r\n"],"sourceRoot":""}