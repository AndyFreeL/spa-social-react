{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","DialogItem","path","id","className","s","dialog","contact","src","ava","alt","activeClassName","active","name","Message","messages_prim","user_ava","message","maxLength10","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","message_enter_field","Field","component","Textarea","placeholder","validate","required","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","content","dialogsBody","dialogs_items","messages_items","values","sendMessage","newMessageBody","compose","dispatch","addNewMessageCreator"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,cAAgB,+BAA+B,OAAS,wBAAwB,OAAS,wBAAwB,eAAiB,gCAAgC,cAAgB,+BAA+B,oBAAsB,qCAAqC,SAAW,0BAA0B,QAAU,2B,qJCKvZC,EAA6B,SAACC,GAAD,MAAY,CAC3CC,OAAOD,EAAME,KAAKD,SAGPE,EAAmB,SAACC,GAAe,IAEzCC,EAFwC,4JAG5C,WACE,OAAIC,KAAKC,MAAMN,OACR,cAACG,EAAD,eAAeE,KAAKC,QADG,cAAC,IAAD,CAAUC,GAAG,eAJD,GAEdC,IAAML,WAStC,OAFsCM,YAAQX,EAARW,CAAoCL,K,mGCD5DM,EAdI,SAACJ,GAEhB,IAAIK,EAAO,YAAcL,EAAMM,GAE/B,OACI,qBAAKC,UAAWC,IAAEC,OAAlB,SACI,sBAAKF,UAAWC,IAAEE,QAAlB,UACA,8BAAK,qBAAKC,IAAKC,IAAKC,IAAI,OACxB,cAAC,IAAD,CAASZ,GAAII,EAAMS,gBAAiBN,IAAEO,OAAtC,SAA+Cf,EAAMgB,aCKlDC,EAZC,SAACjB,GAEb,OACI,8BACI,sBAAKO,UAAWC,IAAEU,cAAlB,UACI,qBAAKX,UAAWC,IAAEW,SAAlB,SAA4B,qBAAKR,IAAKC,IAAKC,IAAI,OAC/C,8BAAMb,EAAMoB,gB,yCCFtBC,EAAYC,YAAiB,IA2C7BC,EAAsBC,YAAU,CAACC,KAAK,kBAAhBD,EAXL,SAACxB,GACtB,OACE,sBAAM0B,SAAU1B,EAAM2B,aAAtB,SACE,sBAAKpB,UAAWC,IAAEoB,oBAAlB,UACE,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUf,KAAM,iBAAmBgB,YAAa,qBAAsBC,SAAU,CAACC,IAAUb,KAC7G,iDAQOc,EA3CC,SAACnC,GAEf,IAAIP,EAAQO,EAAMoC,YAOdC,EAAkB5C,EAAM6C,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYxB,KAAMwB,EAAExB,KAAiBV,GAAIkC,EAAElC,IAAZkC,EAAElC,OAC1EmC,EAAmBhD,EAAMiD,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAASvB,QAASuB,EAAEvB,SAAcuB,EAAErC,OAEnF,OAAKN,EAAMN,OAGT,qBAAKa,UAAWC,IAAEoC,QAAlB,SACE,sBAAKrC,UAAWC,IAAEqC,YAAlB,UACE,qBAAKtC,UAAWC,IAAEsC,cAAlB,SACGT,IAEH,sBAAK9B,UAAWC,IAAEuC,eAAlB,UACGN,EACD,cAAClB,EAAD,CAAqBG,SAlBZ,SAACsB,GAChBhD,EAAMiD,YAAYD,EAAOE,2BAOD,cAAC,IAAD,CAAUjD,GAAI,Y,wBCF3BkD,sBACbhD,aAfoB,SAACV,GACrB,MAAM,CACJ2C,YAAY3C,EAAM2C,gBAIG,SAACgB,GACxB,MAAM,CACJH,YAAY,SAACC,GACXE,EAASC,YAAqBH,SAOlCtD,IAFauD,CAGbhB","file":"static/js/4.e4863cf4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Dialogs_content__3CGBr\",\"dialogsBody\":\"Dialogs_dialogsBody__dJh85\",\"dialogs_items\":\"Dialogs_dialogs_items__289p-\",\"active\":\"Dialogs_active__2-a1b\",\"dialog\":\"Dialogs_dialog__2W2NK\",\"messages_items\":\"Dialogs_messages_items__3jDbE\",\"messages_prim\":\"Dialogs_messages_prim__3bjPA\",\"message_enter_field\":\"Dialogs_message_enter_field__Ckvrq\",\"user_ava\":\"Dialogs_user_ava__1zxQ-\",\"contact\":\"Dialogs_contact__1fpKA\"};","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth:state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n class RedirectComponent extends React.Component{\r\n   render() {\r\n     if(!this.props.isAuth) return <Redirect to='/login' />\r\n     return <Component {...this.props} />\r\n   }\r\n }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n return ConnectedAuthRedirectComponent;\r\n};\r\n","import s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport ava from '../../../assets/images/avatar.png'\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    let path = \"/dialogs/\" + props.id\r\n\r\n    return (\r\n        <div className={s.dialog}>\r\n            <div className={s.contact}>\r\n            <div><img src={ava} alt=\"\"/></div>\r\n            <NavLink to={path} activeClassName={s.active}>{props.name}</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import s from './../Dialogs.module.css'\r\nimport ava from '../../../assets/images/avatar.png'\r\nimport React from \"react\";\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.messages_prim}>\r\n                <div className={s.user_ava}><img src={ava} alt=\"\"/></div>\r\n                <div>{props.message}</div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Message;","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength10=maxLengthCreator(10);\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  let state = props.dialogsPage;\r\n\r\n  let addMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  }\r\n\r\n\r\n  let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n  let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>)\r\n\r\n  if (!props.isAuth) return <Redirect to={'/login'}/>;\r\n\r\n  return (\r\n    <div className={s.content}>\r\n      <div className={s.dialogsBody}>\r\n        <div className={s.dialogs_items}>\r\n          {dialogsElements}\r\n        </div>\r\n        <div className={s.messages_items}>\r\n          {messagesElements}\r\n          <AddMessageReduxForm onSubmit={addMessage}/>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div className={s.message_enter_field}>\r\n        <Field component={Textarea} name={'newMessageBody'}  placeholder={'Enter your message'} validate={[required, maxLength10]}/>\r\n        <button >Add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({form:'addMessageForm'})(AddMessageForm);\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport {addNewMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state)=>{\r\n  return{\r\n    dialogsPage:state.dialogsPage,\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch)=>{\r\n  return{\r\n    sendMessage:(newMessageBody)=>{\r\n      dispatch(addNewMessageCreator(newMessageBody))\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps,mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}